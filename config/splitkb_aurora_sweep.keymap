/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

    combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <50>;
            key-positions = <30 32>;
            bindings = <&kp DEL>;
            layers = <0>;
        };
    };

    macros {
        bt_mac: bt_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <1>;
            bindings = <&to 0>, <&macro_param_1to1>, <&bt BT_SEL MACRO_PLACEHOLDER>;
        };
        bt_win: bt_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <1>;
            bindings = <&to 3>, <&macro_param_1to1>, <&bt BT_SEL MACRO_PLACEHOLDER>;
        };
    };

    behaviors {
        lhhm: left_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;    // <---[[right-hand keys]]
        };

        rhhm: right_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>;    // <---[[left-hand keys]]
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac_default_layer {
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B                       &kp J &kp L &kp U &kp Y &kp SEMICOLON
                &lhhm LCTRL A &lhhm LALT R &lhhm LGUI S &kp LSHFT T &kp G                       &kp M &rhhm RSHFT N &rhhm RGUI E &rhhm RALT I &rhhm RCTRL O
                &kp Z &kp X &kp C &kp D &kp V                       &kp K &kp H  &kp CMMA &kp DOT &kp SLASH
                                &kp ENTER &sk SPACE            &sk BACKSPACE &to 1
            >;
        };

        mac_num_layer {
            bindings = <
                &kp ESC  &kp C_PP &kp C_PREV  &kp C_NEXT  &kp LS(MINUS)    			    &kp MINUS  &kp N7 &kp N8 &kp N9 &trans
                &kp TAB  &trans   &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL) 			&kp EQUAL  &kp N4 &kp N5 &kp N6 &kp ENTER
                &trans  &kp AMPS &kp SLASH &kp STAR &kp DOT    			                &kp N0     &kp N1 &kp N2 &kp N3 &trans 
                            &to 0 &sk LGUI  				&sk RALT  &to 2 
            >;
		};

        mac_bt {
            bindings = <
                &to 0  &trans &trans &trans &trans       &bt BT_CLR &trans &trans &trans &trans 
                &to 3  &trans &trans &trans &trans       &trans &bt_win 4 &trans &trans &trans 
                &trans  &trans &trans &trans &trans       &bt_win 0 &bt_mac 1 &bt_win 2 &bt_win 3 &trans
                &to 0 &trans  					                            &trans &to 1 
            >;
		};

        win_default_layer {
            bindings = <
                &kp Q &kp W &kp F &kp P &kp B                       &kp J &kp L &kp U &kp Y &kp SEMICOLON
                &lhhm LGUI A &lhhm LALT R &lhhm LCTRL S &kp LSHFT T &kp G                       &kp M &rhhm RSHFT N &rhhm RCTRL E &rhhm RALT I &rhhm RGUI O
                &kp Z &kp X &kp C &kp D &kp V                       &kp K &kp H  &kp CMMA &kp DOT &kp SLASH
                                &kp ENTER &sk SPACE            &sk BACKSPACE &to 4
            >;
        };

        win_num_layer {
            bindings = <
                &kp ESC  &kp C_PP &kp C_PREV  &kp C_NEXT  &kp LS(MINUS)    			    &kp MINUS  &kp N7 &kp N8 &kp N9 &trans
                &kp TAB  &trans   &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL) 			&kp EQUAL  &kp N4 &kp N5 &kp N6 &kp ENTER
                &trans  &kp AMPS &kp SLASH &kp STAR &kp DOT    			                &kp N0     &kp N1 &kp N2 &kp N3 &trans 
                            &to 3 &sk LGUI  				&sk RALT  &to 5 
            >;
		};

        win_bt {
            bindings = <
                &to 0  &trans &trans &trans &trans       &bt BT_CLR &trans &trans &trans &trans 
                &to 3  &trans &trans &trans &trans       &trans &bt_win 4 &trans &trans &trans 
                &trans  &trans &trans &trans &trans       &bt_win 0 &bt_mac 1 &bt_win 2 &bt_win 3 &trans
                &to 3 &trans  					                            &trans &to 4 
            >;
		};

    };
};
